[{"/Users/seungchulha/Developer/ionic/IONIC-REACT/ionic-react/BMI-Calculator/src/index.tsx":"1","/Users/seungchulha/Developer/ionic/IONIC-REACT/ionic-react/BMI-Calculator/src/App.tsx":"2","/Users/seungchulha/Developer/ionic/IONIC-REACT/ionic-react/BMI-Calculator/src/components/BmiResult.tsx":"3","/Users/seungchulha/Developer/ionic/IONIC-REACT/ionic-react/BMI-Calculator/src/components/InputControl.tsx":"4","/Users/seungchulha/Developer/ionic/IONIC-REACT/ionic-react/BMI-Calculator/src/components/BmiControls.tsx":"5"},{"size":199,"mtime":1632123756406,"results":"6","hashOfConfig":"7"},{"size":3639,"mtime":1632193890372,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1632191437189,"results":"9","hashOfConfig":"7"},{"size":675,"mtime":1632193975260,"results":"10","hashOfConfig":"7"},{"size":769,"mtime":1632142146004,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3yv8fv",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/seungchulha/Developer/ionic/IONIC-REACT/ionic-react/BMI-Calculator/src/index.tsx",[],"/Users/seungchulha/Developer/ionic/IONIC-REACT/ionic-react/BMI-Calculator/src/App.tsx",["23","24","25","26"],"import React, { useRef, useState} from 'react';\nimport { \n  IonApp, \n  IonContent, \n  IonHeader, \n  IonToolbar, \n  IonTitle, \n  IonGrid, \n  IonRow, \n  IonCol,\n  IonItem,\n  IonLabel,\n  IonInput,\n  IonCard,\n  IonCardContent,\n  IonAlert,\n} from '@ionic/react';\nimport { calculatorOutline, refreshOutline } from 'ionicons/icons';\n\nimport BmiControls from './components/BmiControls';\nimport BmiResult from './components/BmiResult';\nimport InputControl from './components/InputControl';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\n\nconst App: React.FC = () => {\n\n  const [calculatedBmi, setCalculatedBmi] = useState<number>();\n  const [error, setError] = useState<string>();\n  const [calcUnits, setCalcUnits] = useState<'mkg' | 'ftlbs'>('mkg');\n\n  const weightInputRef = useRef<HTMLIonInputElement>(null);\n  const heightInputRef = useRef<HTMLIonInputElement>(null);\n\nconst calculateBMI = () => {\n  const enteredWeight = weightInputRef.current!.value;\n  const enteredHeight = heightInputRef.current!.value;\n\n  if(!enteredHeight || !enteredWeight || +enteredWeight <= 0 || +enteredHeight <= 0){\n    setError('Please enter a valid (non-negative) input number')\n    return;\n  }\n\n  const weightConversionFactor = calcUnits === 'ftlbs' ? 2.2 : 1;\n  const heightConversionFactor = calcUnits === 'ftlbs' ? 3.28 : 1;\n\n  const weight = +enteredWeight / weightConversionFactor;\n  const height = +enteredHeight / heightConversionFactor;\n\n  const bmi =  +weight / (height * height);\n  setCalculatedBmi(bmi);\n};\n\nconst resetInput = () => {\n  weightInputRef.current!.value = '';\n  heightInputRef.current!.value = '';\n};\n\nconst clearError = () => {\n  setError('');\n}\n\nconst selectCalcUnitHandler = (selectedValue : 'mkg' | 'ftlbs') => {\n  setCalcUnits(selectedValue);\n};\n\nreturn (\n  <React.Fragment>\n    <IonAlert isOpen={!!error} message={error} buttons={[{text: 'Okay', handler: clearError }]}/>\n  <IonApp>\n   <IonHeader>\n     <IonToolbar color=\"primary\">\n       <IonTitle>BMI Calculator</IonTitle>\n     </IonToolbar> \n   </IonHeader>\n   <IonContent className=\"ion-padding\">\n     <IonGrid>\n     <IonRow>\n       <IonCol>\n         <InputControl \n         selectedValue={calcUnits} \n         onSelectValue={selectCalcUnitHandler}\n         />\n       </IonCol>\n     </IonRow>\n       <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Your Height ({calcUnits === 'mkg' ? 'meters' : 'ft'})</IonLabel>\n            <IonInput ref={heightInputRef}></IonInput>\n          </IonItem>\n          </IonCol>\n       </IonRow>\n       <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonLabel position=\"floating\">Your Weight ({calcUnits === 'mkg' ? 'kg' : 'lbs'}) </IonLabel>\n            <IonInput ref={weightInputRef}></IonInput>\n          </IonItem>\n          </IonCol>\n       </IonRow>\n       \n       <BmiControls onCalculate={calculateBMI} onReset={resetInput} />\n\n      \n{calculatedBmi && (\n       <BmiResult result={calculatedBmi} />\n)}\n     </IonGrid>\n     \n   </IonContent>\n  </IonApp>\n  </React.Fragment>\n);\n}\n\nexport default App;\n","/Users/seungchulha/Developer/ionic/IONIC-REACT/ionic-react/BMI-Calculator/src/components/BmiResult.tsx",[],"/Users/seungchulha/Developer/ionic/IONIC-REACT/ionic-react/BMI-Calculator/src/components/InputControl.tsx",[],"/Users/seungchulha/Developer/ionic/IONIC-REACT/ionic-react/BMI-Calculator/src/components/BmiControls.tsx",[],{"ruleId":"27","severity":1,"message":"28","line":14,"column":3,"nodeType":"29","messageId":"30","endLine":14,"endColumn":10},{"ruleId":"27","severity":1,"message":"31","line":15,"column":3,"nodeType":"29","messageId":"30","endLine":15,"endColumn":17},{"ruleId":"27","severity":1,"message":"32","line":18,"column":10,"nodeType":"29","messageId":"30","endLine":18,"endColumn":27},{"ruleId":"27","severity":1,"message":"33","line":18,"column":29,"nodeType":"29","messageId":"30","endLine":18,"endColumn":43},"@typescript-eslint/no-unused-vars","'IonCard' is defined but never used.","Identifier","unusedVar","'IonCardContent' is defined but never used.","'calculatorOutline' is defined but never used.","'refreshOutline' is defined but never used."]